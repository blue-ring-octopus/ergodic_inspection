<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<launch>
<arg name="isSim" default="true" />
<param name="isSim" type="bool" value="$(arg isSim)" />

<group if="$(arg isSim)">
    <node type="rviz" name="rvizscan" pkg="rviz" args="-d $(find ergodic_inspection)/rviz/viz.rviz" />
</group>

<group unless="$(arg isSim)">
    <node type="rviz" name="rvizscan" pkg="rviz" args="-d $(find ergodic_inspection)/rviz/viz_real.rviz" />
 
    <node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry" output="screen">
        <param name="laser_scan_topic" value="/scan"/>        # topic where the lidar scans are being published
        <param name="odom_topic" value="/odom_rf2o" />              # topic where tu publish the odometry estimations
        <param name="publish_tf" value="true" />                   # wheter or not to publish the tf::transform (base->odom)
        <param name="base_frame_id" value="/base_footprint_rf2o"/>            # frame_id (tf) of the mobile robot base. A tf transform from the laser_frame to the base_frame is mandatory
        <param name="odom_frame_id" value="/odom_rf2o" />                # frame_id (tf) to publish the odometry estimations    
        <param name="init_pose_from_topic" value="" /> # (Odom topic) Leave empty to start at point (0,0)
        <param name="freq" value="6.0"/>                            # Execution frequency.
        <param name="verbose" value="true" />                       # verbose
     </node>
</group>

<include file="$(find ergodic_inspection)/launch/move_base.launch">
    <arg name="isSim" value="$(arg isSim)"/>
</include>
 
<!--  <node pkg="pointcloud_to_laserscan" name="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" output="screen">
  	    <remap from="cloud_in" to="/depth_registered/points"/>
      	    <param name="target_frame " type="str" value="base_footprint" />
  	    <param name="min_height " type="double" value="0.05" />
  	    <param name="max_height " type="double" value="0.2" />
   </node> -->

  <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
  <node pkg="nodelet" type="nodelet" name="nodelet1"
        args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
    <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
    <remap from="depth_registered/image_rect" to="/camera/aligned_depth_to_color/image_raw"/>
    <remap from="rgb/image_rect_color" to="/camera/color/image_raw"/>
  </node> 	
</launch>
